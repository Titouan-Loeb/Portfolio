[
	{
		"name": "Sleeq",
		"projectId": "Sleeq",
		"shortDescription": "An intelligent cross platform e-wallet",
		"image": "/assets/images/projects/sleeq_plus.png",
		"url": "https://github.com/Titouan-Loeb/Sleeq",
		"page": "/projects/Sleeq",
		"sections": [
			{
				"title": "Sleeq",
				"content": "Sleeq is the final project of 8 Epitech students, it is a cross-platform intelligent e-wallet. Gather all your documents and carry them everywhere you go. Sleeq utilize the OCR (Optical Character Recognition) technology to identify the type of your documents, categorize them, and present them to you in an intelligent way. Thanks to Sleeq it is surprisingly easy to find all you documents anytime, anywhere. Just search for a word that is in you document/picture with Sleeq's searching engine and you will find it right away. Access to Sleeq throught our website, or download our browser extension"
			}
		],
		"stack": "Flutter, FlutterFlow, Firebase, Firestore, MongoDB, Stripe, Could functions, Git"
	},
	{
		"name": "Sorting competition",
		"projectId": "Sorting_competition",
		"shortDescription": "A race between sorting algorithms in C++",
		"image": "/assets/images/projects/sorting_competition.png",
		"url": "https://github.com/Titouan-Loeb/SortingCompetition",
		"page": "/projects/Sorting_competition",
		"sections": [
			{
				"title": "Sorting competition",
				"content": "1 list, 10+ algorithms, 1 winner!\nSorting competition is a small C++ project featuring several algorithms for sorting numerical lists. All the algorithms are launched simultaneously and given the task of sorting the same list. They are timed and a ranking is displayed in real time. It is possible to choose which algorithm is in the competition and to define a maximum time in which the algorithm must finish sorting the list. If it exceeds this time, it is discalified.Translated with DeepL.com (free version)"
			}
		],
		"stack": "C++, Makefile, SFML, SDL2, Ncurses, Git"
	},
	{
		"name": "Arcade",
		"projectId": "Arcade",
		"shortDescription": "A C++ arcade game reproduction using 3 graphical libraries",
		"image": "/assets/images/projects/arcade_logo.png",
		"url": "https://github.com/Titouan-Loeb/Arcade",
		"page": "/projects/Arcade",
		"sections": [
			{
				"title": "Arcade",
				"content": "Arcade is C++ reproduction of an arcade game. The are two game available: Pacman and Nibler. The game is made with 3 graphical libraries: SFML, SDL2, and Ncurses. The goal of this project was to learn how to use different graphical libraries and how to switch between at run time. The arcade is also able to load games at run time using dynamic libraries that fit the acrchitecture of the aracade."
			}
		],
		"stack": "C++, Makefile, SFML, SDL2, Ncurses, Git"
	},
	{
		"name": "Sokoban duel",
		"projectId": "Sokoban_duel",
		"shortDescription": "This is a sokoban video game but better! You can play 1v1",
		"image": "/assets/images/projects/sokoban.png",
		"url": "https://github.com/Titouan-Loeb/Sokoban_duel",
		"page": "/projects/Sokoban_duel",
		"sections": [
			{
				"title": "Sokoban duel",
				"content": "Sokoban is a game where you need to push crates on specific locations, this verison of the game is graphical and it includes a 1v1 game mode where you need to finish before you oponent. During my 1st year of college, I had to make a sokoban game in C in the terminal using the ncurses library. During summer holidays I decided to make it graphical and add a 1v1 mode."
			}
		],
		"stack": "C++, Makefile, SFML, Ncurses, Git"
	},
	{
		"name": "Malloc",
		"projectId": "Malloc",
		"shortDescription": "Malloc is a C function that allocates dynamic memory",
		"image": "/assets/images/projects/logo_c.png",
		"url": "https://github.com/Titouan-Loeb/Malloc",
		"page": "/projects/Malloc",
		"sections": [
			{
				"title": "Malloc",
				"content": "Malloc is the first project I did for my 2nd year at Epitech. Malloc a C function that allocates dynamic memory, if you ever programmed in C probably already encountered it. For the sake of a school project, I had to reproduce it. At the beginning It was definitely a bit challenging to understand the inner working of the memory allocation, but once I did, it became clear and a pleasure to work on it."
			}
		],
		"stack": "C, Makefile, Git"
	},
	{
		"name": "HAL",
		"projectId": "HAL",
		"shortDescription": "HAL is a Lisp interpretor made with Haskell",
		"image": "/assets/images/projects/haskell.png",
		"url": "https://github.com/Titouan-Loeb/Lisp_interpretor",
		"page": "/projects/HAL",
		"sections": [
			{
				"title": "HAL",
				"content": "Hal is a school project made in 3rd year at Epitech. The goal of this project is to make a Lisp interpretor in Haskell. Lisp is a functionnal programming language, it has several iterations but to see what this program can interpret go check the ToolKit.txt that describe every function and functionality that is handle by this interpretor."
			}
		],
		"stack": "Haskell, Git"
	}
]
